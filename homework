# игра крестики нолики
def is_new_board():  # создаем поле размером 3 на 3
    return [[" " for _ in range(3)] for _ in range(3)]

def is_view_board(board):  # визуализируем поле
    print("\n    1    2    3")
    for i, row in enumerate(board):
        print(i + 1, row)
        if i < 2:
            print("  ")

def is_valid_input(board, x, y):  # проверяю ввол
    return 1 <= x <= 3 and 1 <= y <= 3 and board[x-1][y-1] == " "

def is_check_winner(board, player):  # Проверка победных условий
    for row in board:
        if all(point == player for point in row):
            return True
    for col in range(3):
        if all(board[row][col] == player for row in range(3)):
            return True
    if all(board[i][i] == player for i in range(3)) or all(board[i][2 - i] == player for i in range(3)):
        return True
    return False

def is_draw(board):  # Проверяю ничью
    return all(cell != " " for row in board for cell in row)

def is_game():  # функция самой игры
    print("Игра крестики нолики")
    board = is_new_board()
    player = "X"

    while True:
        is_view_board(board)
        print(f"\nХод игрока, который играет {player}")
        x, y = map(int, input("Введите координаты (например 1 2 , где 1 строка, 2 столбец): ").split())
        board[x-1][y-1] = player

        if is_check_winner(board, player):
            is_view_board(board)
            print(f"\nИгрок, который играл {player} выйграл")
            break

        if is_draw(board):
            is_view_board(board)
            print("\nНичья")
            break

        player = "O" if player == "X" else "X" # перещелкиваем игрока

is_game()

